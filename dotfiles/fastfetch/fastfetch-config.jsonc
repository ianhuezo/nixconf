{
    "$schema": "https://github.com/fastfetch-cli/fastfetch/raw/dev/doc/json_schema.json",
    "logo": {
        "type": "kitty-icat",
        "source": "/home/ianh/Pictures/phos.jpg",
        "printRemaining": false,
        "height": 15,
        "width": 35,
        "position": "left",
        "preserveAspectRatio": true,
        "padding": {
            "top": 2,
            "right": 4,
            "left": 2
        }
    },
    "display": {
        "size": {
            "maxPrefix": 8,
            "maxKey": 10,
            "maxValue": 25
        }
    },
    "modules": [
        "break",
        {
            "type": "command",
            "key": "",
            "text": "cols=$(tput cols); available=$((cols - 40)); if [ $available -lt 30 ]; then available=30; fi; hw_text='Hardware'; hw_len=${#hw_text}; total_dashes=$((available - hw_len - 2)); left_dashes=$((total_dashes / 2)); right_dashes=$((total_dashes - left_dashes)); printf '\\033[90m┌'; printf '%.0s─' $(seq 1 $left_dashes); printf '%s' \"$hw_text\"; printf '%.0s─' $(seq 1 $right_dashes); printf '┐\\033[0m'"
        },
        {
            "type": "host",
            "key": " PC",
            "keyColor": "green"
        },
        {
            "type": "cpu",
            "key": "│ ├",
            "keyColor": "green"
        },
        {
            "type": "gpu",
            "key": "│ ├󰍛",
            "keyColor": "green"
        },
        {
            "type": "memory",
            "key": "│ ├󰍛",
            "keyColor": "green"
        },
        {
            "type": "disk",
            "key": "└ └",
            "keyColor": "green"
        },
        {
            "type": "command",
            "key": "",
            "text": "cols=$(tput cols); available=$((cols - 40)); if [ $available -lt 30 ]; then available=30; fi; printf '\\033[90m└'; printf '%.0s─' $(seq 1 $((available - 2))); printf '┘\\033[0m'"
        },
        "break",
        {
            "type": "command",
            "key": "",
            "text": "cols=$(tput cols); available=$((cols - 40)); if [ $available -lt 30 ]; then available=30; fi; sw_text='Software'; sw_len=${#sw_text}; total_dashes=$((available - sw_len - 2)); left_dashes=$((total_dashes / 2)); right_dashes=$((total_dashes - left_dashes)); printf '\\033[90m┌'; printf '%.0s─' $(seq 1 $left_dashes); printf '%s' \"$sw_text\"; printf '%.0s─' $(seq 1 $right_dashes); printf '┐\\033[0m'"
        },
        {
            "type": "os",
            "key": " OS",
            "keyColor": "yellow"
        },
        {
            "type": "kernel",
            "key": "│ ├",
            "keyColor": "yellow"
        },
        {
            "type": "bios",
            "key": "│ ├",
            "keyColor": "yellow"
        },
        {
            "type": "packages",
            "key": "│ ├󰏖",
            "keyColor": "yellow"
        },
        {
            "type": "shell",
            "key": "└ └",
            "keyColor": "yellow"
        },
        {
            "type": "command",
            "key": "",
            "text": "cols=$(tput cols); available=$((cols - 40)); if [ $available -lt 30 ]; then available=30; fi; printf '\\033[90m└'; printf '%.0s─' $(seq 1 $((available - 2))); printf '┘\\033[0m'"
        },
        "break",
        {
            "type": "de",
            "key": " DE",
            "keyColor": "blue"
        },
        {
            "type": "lm",
            "key": "│ ├",
            "keyColor": "blue"
        },
        {
            "type": "wm",
            "key": "│ ├",
            "keyColor": "blue"
        },
        {
            "type": "wmtheme",
            "key": "│ ├󰉼",
            "keyColor": "blue"
        },
        {
            "type": "terminal",
            "key": "└ └",
            "keyColor": "blue"
        },
        "break",
        {
            "type": "command",
            "key": "",
            "text": "cols=$(tput cols); available=$((cols - 40)); if [ $available -lt 30 ]; then available=30; fi; ut_text='Uptime / Age / DT'; ut_len=${#ut_text}; total_dashes=$((available - ut_len - 2)); left_dashes=$((total_dashes / 2)); right_dashes=$((total_dashes - left_dashes)); printf '\\033[90m┌'; printf '%.0s─' $(seq 1 $left_dashes); printf '%s' \"$ut_text\"; printf '%.0s─' $(seq 1 $right_dashes); printf '┐\\033[0m'"
        },
        {
            "type": "command",
            "key": "  OS Age ",
            "keyColor": "magenta",
            "text": "birth_install=$(stat -c %W /); current=$(date +%s); time_progression=$((current - birth_install)); days_difference=$((time_progression / 86400)); echo $days_difference days"
        },
        {
            "type": "uptime",
            "key": "  Uptime ",
            "keyColor": "magenta"
        },
        {
            "type": "datetime",
            "key": "  DateTime ",
            "keyColor": "magenta"
        },
        {
            "type": "command",
            "key": "",
            "text": "cols=$(tput cols); available=$((cols - 40)); if [ $available -lt 30 ]; then available=30; fi; printf '\\033[90m└'; printf '%.0s─' $(seq 1 $((available - 2))); printf '┘\\033[0m'"
        },
        {
            "type": "colors",
            "paddingLeft": 2,
            "symbol": "circle"
        }
    ]
}
